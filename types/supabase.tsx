/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/nonces": {
    get: {
      parameters: {
        query: {
          wallet_address?: parameters["rowFilter.nonces.wallet_address"];
          nonce?: parameters["rowFilter.nonces.nonce"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["nonces"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** nonces */
          nonces?: definitions["nonces"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          wallet_address?: parameters["rowFilter.nonces.wallet_address"];
          nonce?: parameters["rowFilter.nonces.nonce"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          wallet_address?: parameters["rowFilter.nonces.wallet_address"];
          nonce?: parameters["rowFilter.nonces.nonce"];
        };
        body: {
          /** nonces */
          nonces?: definitions["nonces"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/snaps": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.snaps.id"];
          created_at?: parameters["rowFilter.snaps.created_at"];
          sender_id?: parameters["rowFilter.snaps.sender_id"];
          recipient_type?: parameters["rowFilter.snaps.recipient_type"];
          recipient_fname?: parameters["rowFilter.snaps.recipient_fname"];
          recipient_email?: parameters["rowFilter.snaps.recipient_email"];
          recipient_wallet_address?: parameters["rowFilter.snaps.recipient_wallet_address"];
          category?: parameters["rowFilter.snaps.category"];
          note?: parameters["rowFilter.snaps.note"];
          claimed?: parameters["rowFilter.snaps.claimed"];
          claimed_at?: parameters["rowFilter.snaps.claimed_at"];
          recipient_id?: parameters["rowFilter.snaps.recipient_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["snaps"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** snaps */
          snaps?: definitions["snaps"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.snaps.id"];
          created_at?: parameters["rowFilter.snaps.created_at"];
          sender_id?: parameters["rowFilter.snaps.sender_id"];
          recipient_type?: parameters["rowFilter.snaps.recipient_type"];
          recipient_fname?: parameters["rowFilter.snaps.recipient_fname"];
          recipient_email?: parameters["rowFilter.snaps.recipient_email"];
          recipient_wallet_address?: parameters["rowFilter.snaps.recipient_wallet_address"];
          category?: parameters["rowFilter.snaps.category"];
          note?: parameters["rowFilter.snaps.note"];
          claimed?: parameters["rowFilter.snaps.claimed"];
          claimed_at?: parameters["rowFilter.snaps.claimed_at"];
          recipient_id?: parameters["rowFilter.snaps.recipient_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.snaps.id"];
          created_at?: parameters["rowFilter.snaps.created_at"];
          sender_id?: parameters["rowFilter.snaps.sender_id"];
          recipient_type?: parameters["rowFilter.snaps.recipient_type"];
          recipient_fname?: parameters["rowFilter.snaps.recipient_fname"];
          recipient_email?: parameters["rowFilter.snaps.recipient_email"];
          recipient_wallet_address?: parameters["rowFilter.snaps.recipient_wallet_address"];
          category?: parameters["rowFilter.snaps.category"];
          note?: parameters["rowFilter.snaps.note"];
          claimed?: parameters["rowFilter.snaps.claimed"];
          claimed_at?: parameters["rowFilter.snaps.claimed_at"];
          recipient_id?: parameters["rowFilter.snaps.recipient_id"];
        };
        body: {
          /** snaps */
          snaps?: definitions["snaps"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          created_at?: parameters["rowFilter.users.created_at"];
          email?: parameters["rowFilter.users.email"];
          wallet_address?: parameters["rowFilter.users.wallet_address"];
          fname?: parameters["rowFilter.users.fname"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          created_at?: parameters["rowFilter.users.created_at"];
          email?: parameters["rowFilter.users.email"];
          wallet_address?: parameters["rowFilter.users.wallet_address"];
          fname?: parameters["rowFilter.users.fname"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          created_at?: parameters["rowFilter.users.created_at"];
          email?: parameters["rowFilter.users.email"];
          wallet_address?: parameters["rowFilter.users.wallet_address"];
          fname?: parameters["rowFilter.users.fname"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  nonces: {
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    wallet_address: string;
    /**
     * Format: uuid
     * @default extensions.uuid_generate_v4()
     */
    nonce?: string;
  };
  snaps: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /** Format: uuid */
    sender_id: string;
    /** Format: text */
    recipient_type: string;
    /** Format: text */
    recipient_fname?: string;
    /** Format: text */
    recipient_email?: string;
    /** Format: text */
    recipient_wallet_address?: string;
    /** Format: text */
    category?: string;
    /** Format: text */
    note?: string;
    /** Format: boolean */
    claimed: boolean;
    /** Format: timestamp without time zone */
    claimed_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    recipient_id?: string;
  };
  users: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    email?: string;
    /** Format: text */
    wallet_address?: string;
    /** Format: text */
    fname?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description nonces */
  "body.nonces": definitions["nonces"];
  /** Format: text */
  "rowFilter.nonces.wallet_address": string;
  /** Format: uuid */
  "rowFilter.nonces.nonce": string;
  /** @description snaps */
  "body.snaps": definitions["snaps"];
  /** Format: uuid */
  "rowFilter.snaps.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.snaps.created_at": string;
  /** Format: uuid */
  "rowFilter.snaps.sender_id": string;
  /** Format: text */
  "rowFilter.snaps.recipient_type": string;
  /** Format: text */
  "rowFilter.snaps.recipient_fname": string;
  /** Format: text */
  "rowFilter.snaps.recipient_email": string;
  /** Format: text */
  "rowFilter.snaps.recipient_wallet_address": string;
  /** Format: text */
  "rowFilter.snaps.category": string;
  /** Format: text */
  "rowFilter.snaps.note": string;
  /** Format: boolean */
  "rowFilter.snaps.claimed": string;
  /** Format: timestamp without time zone */
  "rowFilter.snaps.claimed_at": string;
  /** Format: uuid */
  "rowFilter.snaps.recipient_id": string;
  /** @description users */
  "body.users": definitions["users"];
  /** Format: uuid */
  "rowFilter.users.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.users.created_at": string;
  /** Format: text */
  "rowFilter.users.email": string;
  /** Format: text */
  "rowFilter.users.wallet_address": string;
  /** Format: text */
  "rowFilter.users.fname": string;
}

export interface operations {}

export interface external {}
